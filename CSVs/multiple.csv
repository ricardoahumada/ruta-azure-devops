"Work Item Type","Title 1","Title 2","Title 3","Title 4","Description","Acceptance Criteria","Priority"
"Epic","Shopping & Checkout","","","","Support adding items to cart, managing the cart, and completing purchases through secure payment processing.","","1"
"Feature","","Cart Management","","","Enable users to add, remove, and update quantities in their shopping cart. Persist cart across sessions.","","1"
"User Story","","","As a user, I want to add products to my cart from the product listing or detail page.","","Clicking 'Add to Cart' increases cart count, shows toast message, and persists item in session/local storage.","Given I view a product, When I click 'Add to Cart', Then the item is added and counter updates.",1
"Task","","","","Build cart context/provider in React","Manage cart state globally using React Context or Redux Toolkit.","","1"
"User Story","","","As a user, I want to view and modify items in my cart before checkout.","","Show cart summary with thumbnails, titles, prices, quantity selectors, and subtotal. Allow removal of items.","Given I have items in my cart, When I change quantity or remove an item, Then the total updates immediately.",1
"Task","","","","Save cart to localStorage on change","Persist cart contents when user adds/removes items, even if they close the browser.","","2"
"Bug","","","","Cart total not updating after quantity change","When increasing item quantity, displayed total remains unchanged until page refresh.","","2"
"Feature","","Secure Checkout","","","Integrate a payment gateway (Stripe) to process credit card payments securely and confirm purchase.","","1"
"User Story","","","As a buyer, I want to complete my purchase using a credit card via Stripe.","","Redirect to Stripe Checkout or embed Stripe Elements. Capture payment, confirm success/failure, and create order record.","Given I am on checkout page, When I enter card details and pay, Then payment is processed and order is confirmed.",1
"Task","","","","Integrate Stripe Elements on checkout page","Embed Stripe.js elements for card number, expiry, CVC; handle token creation.","","1"
"Task","","","","Create order confirmation page","Show success message, order ID, estimated delivery, and link to order history.","","2"
"Bug","","","","Stripe test payment succeeds but no order is created","Payment processes successfully, but backend does not persist order in database.","","1"
"User Story","","","As a user, I want to see my order history after logging in.","","Fetch and display list of previous orders with dates, totals, statuses, and links to view details.","Given I am logged in, When I go to Order History, Then I see all my past orders.",2
"Task","","","","Develop GET /api/orders for logged-in user","Return list of userâ€™s orders with line items and total amounts.","","2"
"Epic","Order Management","","","","Track, view, and manage customer orders from placement to fulfillment.","","3"
"Feature","","Order History","","","Display past orders with status (pending, shipped, delivered) and details per order.","","3"
"User Story","","","As a user, I want to see my order history after logging in.","","Fetch and display list of previous orders with dates, totals, statuses, and links to view details.","Given I am logged in, When I go to Order History, Then I see all my past orders.",3
"Task","","","","Develop GET /api/orders for logged-in user","Shared task: Used across multiple stories related to order retrieval.","","2"